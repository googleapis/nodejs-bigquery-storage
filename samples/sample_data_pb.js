// source: sample_data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.SampleData', null, global);
goog.exportSymbol('proto.SampleData.SampleStruct', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SampleData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SampleData.repeatedFields_, null);
};
goog.inherits(proto.SampleData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SampleData.displayName = 'proto.SampleData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SampleData.SampleStruct = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SampleData.SampleStruct, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SampleData.SampleStruct.displayName = 'proto.SampleData.SampleStruct';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SampleData.repeatedFields_ = [13,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SampleData.prototype.toObject = function(opt_includeInstance) {
  return proto.SampleData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SampleData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SampleData.toObject = function(includeInstance, msg) {
  var f, obj = {
    boolCol: (f = jspb.Message.getBooleanField(msg, 1)) == null ? undefined : f,
    bytesCol: msg.getBytesCol_asB64(),
    float64Col: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    int64Col: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    stringCol: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    dateCol: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    datetimeCol: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    geographyCol: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    numericCol: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    bignumericCol: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
    timeCol: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    timestampCol: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    int64ListList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    structCol: (f = msg.getStructCol()) && proto.SampleData.SampleStruct.toObject(includeInstance, f),
    structListList: jspb.Message.toObjectList(msg.getStructListList(),
    proto.SampleData.SampleStruct.toObject, includeInstance),
    rowNum: (f = jspb.Message.getField(msg, 16)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SampleData}
 */
proto.SampleData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SampleData;
  return proto.SampleData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SampleData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SampleData}
 */
proto.SampleData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolCol(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytesCol(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFloat64Col(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInt64Col(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringCol(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDateCol(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatetimeCol(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setGeographyCol(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setNumericCol(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBignumericCol(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeCol(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestampCol(value);
      break;
    case 13:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addInt64List(values[i]);
      }
      break;
    case 14:
      var value = new proto.SampleData.SampleStruct;
      reader.readMessage(value,proto.SampleData.SampleStruct.deserializeBinaryFromReader);
      msg.setStructCol(value);
      break;
    case 15:
      var value = new proto.SampleData.SampleStruct;
      reader.readMessage(value,proto.SampleData.SampleStruct.deserializeBinaryFromReader);
      msg.addStructList(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRowNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SampleData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SampleData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SampleData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SampleData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getInt64ListList();
  if (f.length > 0) {
    writer.writeRepeatedInt64(
      13,
      f
    );
  }
  f = message.getStructCol();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.SampleData.SampleStruct.serializeBinaryToWriter
    );
  }
  f = message.getStructListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      15,
      f,
      proto.SampleData.SampleStruct.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeInt64(
      16,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SampleData.SampleStruct.prototype.toObject = function(opt_includeInstance) {
  return proto.SampleData.SampleStruct.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SampleData.SampleStruct} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SampleData.SampleStruct.toObject = function(includeInstance, msg) {
  var f, obj = {
    subIntCol: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SampleData.SampleStruct}
 */
proto.SampleData.SampleStruct.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SampleData.SampleStruct;
  return proto.SampleData.SampleStruct.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SampleData.SampleStruct} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SampleData.SampleStruct}
 */
proto.SampleData.SampleStruct.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSubIntCol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SampleData.SampleStruct.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SampleData.SampleStruct.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SampleData.SampleStruct} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SampleData.SampleStruct.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 sub_int_col = 1;
 * @return {number}
 */
proto.SampleData.SampleStruct.prototype.getSubIntCol = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SampleData.SampleStruct} returns this
 */
proto.SampleData.SampleStruct.prototype.setSubIntCol = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData.SampleStruct} returns this
 */
proto.SampleData.SampleStruct.prototype.clearSubIntCol = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.SampleStruct.prototype.hasSubIntCol = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool bool_col = 1;
 * @return {boolean}
 */
proto.SampleData.prototype.getBoolCol = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setBoolCol = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearBoolCol = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasBoolCol = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes bytes_col = 2;
 * @return {!(string|Uint8Array)}
 */
proto.SampleData.prototype.getBytesCol = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes bytes_col = 2;
 * This is a type-conversion wrapper around `getBytesCol()`
 * @return {string}
 */
proto.SampleData.prototype.getBytesCol_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytesCol()));
};


/**
 * optional bytes bytes_col = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytesCol()`
 * @return {!Uint8Array}
 */
proto.SampleData.prototype.getBytesCol_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytesCol()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setBytesCol = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearBytesCol = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasBytesCol = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float float64_col = 3;
 * @return {number}
 */
proto.SampleData.prototype.getFloat64Col = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setFloat64Col = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearFloat64Col = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasFloat64Col = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 int64_col = 4;
 * @return {number}
 */
proto.SampleData.prototype.getInt64Col = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setInt64Col = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearInt64Col = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasInt64Col = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string string_col = 5;
 * @return {string}
 */
proto.SampleData.prototype.getStringCol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setStringCol = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearStringCol = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasStringCol = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 date_col = 6;
 * @return {number}
 */
proto.SampleData.prototype.getDateCol = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setDateCol = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearDateCol = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasDateCol = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string datetime_col = 7;
 * @return {string}
 */
proto.SampleData.prototype.getDatetimeCol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setDatetimeCol = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearDatetimeCol = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasDatetimeCol = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string geography_col = 8;
 * @return {string}
 */
proto.SampleData.prototype.getGeographyCol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setGeographyCol = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearGeographyCol = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasGeographyCol = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string numeric_col = 9;
 * @return {string}
 */
proto.SampleData.prototype.getNumericCol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setNumericCol = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearNumericCol = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasNumericCol = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string bignumeric_col = 10;
 * @return {string}
 */
proto.SampleData.prototype.getBignumericCol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setBignumericCol = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearBignumericCol = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasBignumericCol = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string time_col = 11;
 * @return {string}
 */
proto.SampleData.prototype.getTimeCol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setTimeCol = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearTimeCol = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasTimeCol = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int64 timestamp_col = 12;
 * @return {number}
 */
proto.SampleData.prototype.getTimestampCol = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setTimestampCol = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearTimestampCol = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasTimestampCol = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated int64 int64_list = 13;
 * @return {!Array<number>}
 */
proto.SampleData.prototype.getInt64ListList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setInt64ListList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.addInt64List = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearInt64ListList = function() {
  return this.setInt64ListList([]);
};


/**
 * optional SampleStruct struct_col = 14;
 * @return {?proto.SampleData.SampleStruct}
 */
proto.SampleData.prototype.getStructCol = function() {
  return /** @type{?proto.SampleData.SampleStruct} */ (
    jspb.Message.getWrapperField(this, proto.SampleData.SampleStruct, 14));
};


/**
 * @param {?proto.SampleData.SampleStruct|undefined} value
 * @return {!proto.SampleData} returns this
*/
proto.SampleData.prototype.setStructCol = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearStructCol = function() {
  return this.setStructCol(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasStructCol = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * repeated SampleStruct struct_list = 15;
 * @return {!Array<!proto.SampleData.SampleStruct>}
 */
proto.SampleData.prototype.getStructListList = function() {
  return /** @type{!Array<!proto.SampleData.SampleStruct>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SampleData.SampleStruct, 15));
};


/**
 * @param {!Array<!proto.SampleData.SampleStruct>} value
 * @return {!proto.SampleData} returns this
*/
proto.SampleData.prototype.setStructListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};


/**
 * @param {!proto.SampleData.SampleStruct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SampleData.SampleStruct}
 */
proto.SampleData.prototype.addStructList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.SampleData.SampleStruct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearStructListList = function() {
  return this.setStructListList([]);
};


/**
 * required int64 row_num = 16;
 * @return {number}
 */
proto.SampleData.prototype.getRowNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.setRowNum = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.SampleData} returns this
 */
proto.SampleData.prototype.clearRowNum = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SampleData.prototype.hasRowNum = function() {
  return jspb.Message.getField(this, 16) != null;
};


goog.object.extend(exports, proto);
